Properties localProperties = new Properties()
File localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
}

android {
    defaultConfig {
        buildConfigField "String", "API_KEY", "\"${localProperties["apiKey"]}\""
        buildConfigField "String", "SITE_ID", "\"${localProperties["siteId"]}\""
    }
    // Avoid redefining signing configs in sample apps to avoid breaking release
    // builds (specially on CI servers)
    signingConfigs {
        debug {
            storeFile file("${rootDir}/samples/debug.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
        }
    }
    repositories {
        // For locally deployed builds
        mavenLocal()
        // For snapshot builds
        maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    }
}

dependencies {
    def cioSDKVersion = localProperties["sdkVersion"]
    if (cioSDKVersion == null || cioSDKVersion.toString().isBlank()) {
        // Add local dependency for SDK modules, helpful for debugging
        implementation(project(":sdk"))
        implementation(project(":messagingpush"))
        implementation(project(":messaginginapp"))
    } else {
        // Stable releases dependency, use published versions directly
        implementation "io.customer.android:tracking:$cioSDKVersion"
        implementation "io.customer.android:messaging-push-fcm:$cioSDKVersion"
        implementation "io.customer.android:messaging-in-app:$cioSDKVersion"
    }
}
