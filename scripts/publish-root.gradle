// Create variables with default values
ext["IS_DEVELOPMENT"] = System.getenv('IS_DEVELOPMENT') == "true"

ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID') ?: ''
ext["signing.password"] = System.getenv('SIGNING_PASSWORD') ?: ''
ext["signing.key"] = System.getenv('SIGNING_KEY') ?: ''
ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME') ?: ''
ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD') ?: ''
ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID') ?: ''
ext["snapshot"] = System.getenv('SNAPSHOT') ?: ''
// have version = "local" for local development so installing in apps is easier.
// this makes the version hard-coded instead of constantly changing like 1.0.0
ext["PUBLISH_VERSION"] = ext.IS_DEVELOPMENT ? "local" : System.getenv('MODULE_VERSION')

// override variables from 'local.properties'
File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    Properties p = new Properties()
    new FileInputStream(secretPropsFile).withCloseable { is -> p.load(is) }
    p.each { name, value -> ext[name] = value }
}

// Set up Sonatype repository
nexusPublishing {
    repositories {
        sonatype {
            stagingProfileId = sonatypeStagingProfileId
            username = ossrhUsername
            password = ossrhPassword
            version = PUBLISH_VERSION
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}