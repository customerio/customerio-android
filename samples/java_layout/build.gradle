plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'com.google.gms.google-services' // Google services Gradle plugin
    id 'androidx.baselineprofile'
}

// Include Customer.io SDK dependencies and common gradle properties for sample apps
ext.appConfigKeyPrefix = 'javaLayout_'
apply from: "${rootDir}/samples/sample-app.gradle"

android {
    namespace 'io.customer.android.sample.java_layout'
    compileSdk 34

    defaultConfig {
        applicationId "io.customer.android.sample.java_layout"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        String universalDeepLinkHost = "www.java-sample.com"
        buildConfigField "String", "UNIVERSAL_DEEP_LINK_HOST", "\"${universalDeepLinkHost}\""
        manifestPlaceholders += [universalDeepLinkHost: universalDeepLinkHost]
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        benchmark {
            debuggable true
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release']
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
        // Enable Compose for the compose fragment
        compose true
        // BuildConfig is now enabled in sample-app.gradle
    }
    
    composeOptions {
        kotlinCompilerExtensionVersion "1.4.7"
    }

    // No need for composeOptions reference as it's conditionally applied in sample-app.gradle
}

baselineProfile {
    mergeIntoMain = true

    // Don't build on every iteration of a full assemble.
    // Instead enable generation directly for the release build variant.
    automaticGenerationDuringBuild = false

    // Make use of Dex Layout Optimizations via Startup Profiles
    dexLayoutOptimization = true

    filter {
        include("io.customer.sdk.core.**")
        include("io.customer.datapipelines.**")
//        include("io.customer.messaginginapp.**")
//        include("io.customer.messagingpush.**")
//        include("io.customer.tracking.migration.**")

//        exclude("io.customer.android.sample.java_layout.**")
    }
}

dependencies {
    def datastore_version = "1.0.0"
    def lifecycle_version = "2.6.1"

    // Existing dependencies
    implementation "androidx.annotation:annotation:1.6.0"
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.core:core-splashscreen:1.0.1"
    implementation "androidx.datastore:datastore-preferences:$datastore_version"
    implementation "androidx.datastore:datastore-preferences-rxjava3:$datastore_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "com.google.android.material:material:1.9.0"
    implementation "io.reactivex.rxjava3:rxandroid:3.0.2"
    // Because RxAndroid releases are few and far between, it is recommended to
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    implementation "io.reactivex.rxjava3:rxjava:3.1.5"

    implementation "androidx.profileinstaller:profileinstaller:1.4.1"
    baselineProfile project(":baselineprofile")
    
    // Minimal Compose dependencies for ComposeInlineExampleFragment
    implementation platform("androidx.compose:compose-bom:2023.10.01")
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.ui:ui-graphics"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation "androidx.compose.material:material"
    implementation "androidx.activity:activity-compose:1.7.1"
    debugImplementation "androidx.compose.ui:ui-tooling:1.4.1"

    // Material for Compose - now conditionally included in sample-app.gradle

    // If this block is removed, updating annotation from 1.5.0 and lifecycle version from 2.5.1
    // causes duplicate classes error because a large number of Lifecycle classes have been
    // converted to Kotlin since 2.6
    // see: https://developer.android.com/jetpack/androidx/releases/lifecycle#2.6.0
    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }
}
