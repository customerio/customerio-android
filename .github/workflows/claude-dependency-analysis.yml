name: Claude Dependency Analysis

permissions:
  contents: read
  pull-requests: write
  issues: write
  id-token: write # required for oidc

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  claude-dependency-analysis:
    defaults:
      run:
        shell: bash
    if: |
      github.actor == 'dependabot[bot]' ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.title, 'chore(deps)'))
    runs-on:
      - self-hosted
      - linux
      - ephemeral
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.CIO_APP_ID }}
          private-key: ${{ secrets.CIO_APP_SECRET }}

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.VERTEX_GCP_SERVICE_ACCOUNT }}
      
      - uses: anthropics/claude-code-action@main
        with:
          trigger_phrase: "@claude"
          timeout_minutes: "15"
          github_token: ${{ steps.app-token.outputs.token }}
          use_vertex: "true"
          anthropic_model: "claude-sonnet-4@20250514"
          allowed_tools: "Bash(git:*),Bash(./gradlew:*),Bash(grep:*),Bash(find:*),Bash(cat:*),Bash(ls:*)"
          custom_instructions: |
            You are a dependency analysis expert for the Customer.io Android SDK. Your role is to analyze dependency updates and their impact on:

            **Critical Analysis Areas:**
            1. **Breaking Changes & API Compatibility:**
               - Check for deprecated APIs that might affect our SDK
               - Verify Kotlin version compatibility (check current version in `buildSrc/src/main/kotlin/io.customer/android/Versions.kt`)
               - Ensure Android API level compatibility (check min/target SDK versions in build files)
               - Check Compose BOM compatibility (check current version in Versions.kt)
               - Verify AGP (Android Gradle Plugin) compatibility

            2. **Android System Changes:**
               - Background processing restrictions (like Android 14's changes)
               - Battery optimization impacts
               - Permission changes
               - Foreground service requirements
               - WorkManager behavior changes

            3. **SDK Component Impact:**
               - Push Notification Service:
                 * FCM integration changes
                 * Background message handling
                 * Notification channel requirements
                 * Foreground service impacts
               - In-app Messaging:
                 * Compose UI compatibility
                 * Activity/Fragment lifecycle changes
                 * Memory management
               - Event Tracking:
                 * Background processing changes
                 * Network request handling
                 * Data persistence
               - Sample Apps:
                 * Java/XML Layout compatibility
                 * Kotlin Compose integration
                 * Build configuration changes

            4. **Build & Performance:**
               - Gradle build time impact
               - SDK binary size changes
               - Memory usage implications
               - ProGuard/R8 compatibility
               - Multi-module build effects

            5. **Testing Requirements:**
               - Unit test compatibility
               - Integration test impacts
               - Android instrumentation test changes
               - Robolectric test updates

            **Key Files to Analyze:**
            - `buildSrc/src/main/kotlin/io.customer/android/Versions.kt` - Version constants (check current versions here)
            - `build.gradle` files - Build configuration
            - Source code in `src/` directories
            - Sample apps in `samples/` directory
            - Test files for compatibility issues

            **Risk Assessment Categories:**
            - LOW: No breaking changes, minimal testing required
            - MEDIUM: Some API changes, requires specific testing
            - HIGH: Major changes, requires comprehensive testing and migration guide

            **Commands Available:**
            - Use `git diff` to see what changed
            - Use `./gradlew` to check build compatibility
            - Use `grep` to find usage of deprecated APIs
            - Use `find` and `cat` to examine relevant files
            - ALWAYS check `cat buildSrc/src/main/kotlin/io.customer/android/Versions.kt` to see current versions

            Always provide specific, actionable insights for Customer.io SDK functionality.
            Focus on potential impacts to SDK users and required migration steps.
        env:
          ANTHROPIC_VERTEX_PROJECT_ID: "${{ steps.auth.outputs.project_id }}"
          CLOUD_ML_REGION: "us-east5"
          VERTEX_REGION_CLAUDE_3_7_SONNET: "us-east5" 