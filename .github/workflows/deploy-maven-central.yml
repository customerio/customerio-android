name: Deploy SDK Maven Central 
# If deployment tries to push to maven central and then push git tags
# when git tag deployment fails, you cannot push to maven central again
# as it doesn't allow overwriting previously deployed artifacts. Deploy 
# tag first, then deploy to Maven Central on successful tag deployment. 
on:
  release:
    types: [published]

jobs:
  deploy-sonatype:
    name: Deploy SDK to Maven Central 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11      
      - name: Push to Sonatype servers 
        run: MODULE_VERSION=${{ github.event.release.tag_name }} ./scripts/deploy-code.sh
        env:
          OSSRH_USERNAME: ${{ secrets.GRADLE_PUBLISH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.GRADLE_PUBLISH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.GRADLE_SIGNING_KEYID }}
          SIGNING_PASSWORD: ${{ secrets.GRADLE_SIGNING_PASSPHRASE }}
          SIGNING_KEY: ${{ secrets.GRADLE_SIGNING_PRIVATE_KEY }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
    
      - name: Notify team of successful deployment 
        uses: slackapi/slack-github-action@v1.18.0        
        if: ${{ success() }}
        with:
          # Use block kit for format of the JSON payloads: https://app.slack.com/block-kit-builder
          payload: |
            {
              "text": "Android SDK deployed to Maven Central",
              "blocks": [
                  {
                      "type": "section",
                      "text": {
                          "type": "mrkdwn",
                          "text": "*Android* SDK deployed to Maven Central! (deployment step 2 of 2)"
                      }
                  },
                  {
                      "type": "divider"
                  },
                  {
                      "type": "section",
                      "text": {
                          "type": "mrkdwn",
                          "text": "*Version ${{ github.event.release.tag_name }}*\n\nAndroid SDK deployment progress:\n ~1. <https://github.com/${{github.repository}}/releases/tag/${{ github.event.release.tag_name }}|create git tag>~\n~2. deploy to maven central~\n\n"
                      }
                  }
              ]
            }
        env:
          # Incoming webhook URL that sends message into the correct Slack channel. 
          # Help on how to get the webhook URL: https://github.com/marketplace/actions/slack-send#setup-2
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NOTIFY_RELEASES_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      
      - name: Notify team of failure 
        uses: slackapi/slack-github-action@v1.18.0
        if: ${{ failure() }} # only run this if any previous step failed 
        with:
          # Use block kit for format of the JSON payloads: https://app.slack.com/block-kit-builder
          payload: |
            {
              "text": "Android SDK deployment failure",
              "blocks": [
                  {
                      "type": "section",
                      "text": {
                          "type": "mrkdwn",
                          "text": "*Android* SDK deployment :warning: failure :warning:"
                      }
                  },
                  {
                      "type": "divider"
                  },
                  {
                      "type": "section",
                      "text": {
                          "type": "mrkdwn",
                          "text": "Android SDK failed deployment during step *deploy to maven central*. View <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|CI server logs> to learn why and fix the issue. <https://github.com/customerio/mobile/blob/main/GIT-WORKFLOW.md|Learn more about the deployment process and how to fix errors>."
                      }
                  }
              ]
            }
        env:
          # Incoming webhook URL that sends message into the correct Slack channel. 
          # Help on how to get the webhook URL: https://github.com/marketplace/actions/slack-send#setup-2
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NOTIFY_RELEASES_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK          
