import io.customer.android.Dependencies

apply plugin: 'io.github.gradle-nexus.publish-plugin'
apply plugin: 'binary-compatibility-validator'
apply plugin: 'org.jetbrains.dokka'

buildscript {

    repositories {
        google()
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
        maven { url 'https://repo.gradle.org/gradle/libs-releases' }
    }
    dependencies {
        classpath Dependencies.androidGradlePlugin
        classpath Dependencies.kotlinGradlePlugin
        classpath Dependencies.kotlinSerialization
        classpath Dependencies.kotlinBinaryValidator
        classpath Dependencies.gradleNexusPublishPlugin
        classpath Dependencies.dokka
        // if you have a Gradle plugin dependency in the classpath of the root project,
        // it will not be added to all modules even if they don't need it.
        // Gradle will only add the plugin to modules that explicitly declare a dependency on it.
        // needed for hilt in kotlin sample app
        classpath Dependencies.hiltGradlePlugin
        classpath Dependencies.googleServicesPlugin
        // APKScale plugin to track binary size of the SDK
        classpath Dependencies.apkScale
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {

    repositories {
        google()
        mavenCentral()
    }

    configurations.all {
        resolutionStrategy {
            // Force all Kotlin stdlib dependencies to use 1.8.21
            force "org.jetbrains.kotlin:kotlin-stdlib:1.8.21"
            force "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.21"
            force "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.21"
            force "org.jetbrains.kotlin:kotlin-stdlib-common:1.8.21"

            // This line is important - it ensures that anything that asks for Kotlin 1.6.21
            // or 1.7.21 will get 1.8.21 instead
            eachDependency { details ->
                if (details.requested.group == 'org.jetbrains.kotlin' &&
                        details.requested.name.startsWith('kotlin-')) {
                    details.useVersion '1.8.21'
                }
            }
        }
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}

apiValidation {
    ignoredPackages += [
            'io/customer/base/extenstions',
            'io/customer/sdk/api',
            'io/customer/sdk/data/store',
            'io/customer/sdk/queue',
            'io/customer/sdk/extensions',
            'io/customer/sdk/util',
    ]

    ignoredProjects += [
            'common-test',
            'base',
            'kotlin_compose',
            'java_layout',
    ]

    nonPublicMarkers += [
            'io.customer.base.internal.InternalCustomerIOApi',
    ]

    /**
     * Classes (fully qualified) that are excluded from public API dumps even if they
     * contain public API.
     */
    ignoredClasses.add("io.customer.messagingpush.BuildConfig")
    ignoredClasses.add("io.customer.messaginginapp.BuildConfig")
    ignoredClasses.add("io.customer.sdk.BuildConfig")
}

apply from: "${rootDir}/scripts/publish-root.gradle"
apply from: "${rootDir}/scripts/sdk-binary-size.gradle"
